{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\nexport const userService = {\n  get,\n  post,\n  put,\n  deleteDetail\n};\n\nfunction get(apiEndpoint) {\n  return axios.get(config.baseUrl + apiEndpoint, getOptions()).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(\"Error in response\");\n    console.log(err);\n  });\n}\n\nfunction post(apiEndpoint, payload) {\n  return axios.post(config.baseUrl + apiEndpoint, payload, getOptions()).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction put(apiEndpoint, payload) {\n  return axios.put(config.baseUrl + apiEndpoint, payload, getOptions()).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction deleteDetail(apiEndpoint) {\n  return axios.delete(config.baseUrl + apiEndpoint, getOptions()).then(response => {\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction getOptions() {\n  let options = {};\n\n  if (localStorage.getItem('token')) {\n    options.headers = {\n      'x-access-token': localStorage.getItem('token')\n    };\n  }\n\n  return options;\n}","map":{"version":3,"sources":["/Users/rogelioperez/Documents/Proyectos front web/Cronos/proyecto/cronos/src/_services/user.service.js"],"names":["axios","config","userService","get","post","put","deleteDetail","apiEndpoint","baseUrl","getOptions","then","response","catch","err","console","log","payload","delete","options","localStorage","getItem","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,GADuB;AAEvBC,EAAAA,IAFuB;AAGvBC,EAAAA,GAHuB;AAIvBC,EAAAA;AAJuB,CAApB;;AAOP,SAASH,GAAT,CAAaI,WAAb,EAAyB;AACrB,SAAOP,KAAK,CAACG,GAAN,CAAUF,MAAM,CAACO,OAAP,GAAeD,WAAzB,EAAsCE,UAAU,EAAhD,EAAoDC,IAApD,CAA0DC,QAAD,IAAY;AACxE,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEGC,GAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GALM,CAAP;AAMH;;AAED,SAAST,IAAT,CAAcG,WAAd,EAA2BS,OAA3B,EAAmC;AAC/B,SAAOhB,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACO,OAAP,GAAeD,WAA1B,EAAuCS,OAAvC,EAAgDP,UAAU,EAA1D,EAA8DC,IAA9D,CAAoEC,QAAD,IAAY;AAClF,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEGC,GAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAJM,CAAP;AAKH;;AAED,SAASR,GAAT,CAAaE,WAAb,EAA0BS,OAA1B,EAAkC;AAC9B,SAAOhB,KAAK,CAACK,GAAN,CAAUJ,MAAM,CAACO,OAAP,GAAeD,WAAzB,EAAsCS,OAAtC,EAA+CP,UAAU,EAAzD,EAA6DC,IAA7D,CAAmEC,QAAD,IAAY;AACjF,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEGC,GAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAJM,CAAP;AAKH;;AAED,SAASP,YAAT,CAAsBC,WAAtB,EAAkC;AAC9B,SAAOP,KAAK,CAACiB,MAAN,CAAahB,MAAM,CAACO,OAAP,GAAeD,WAA5B,EAAyCE,UAAU,EAAnD,EAAuDC,IAAvD,CAA6DC,QAAD,IAAY;AAC3E,WAAOA,QAAP;AACH,GAFM,EAEJC,KAFI,CAEGC,GAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAJM,CAAP;AAKH;;AAED,SAASJ,UAAT,GAAqB;AACjB,MAAIS,OAAO,GAAG,EAAd;;AACA,MAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7BF,IAAAA,OAAO,CAACG,OAAR,GAAkB;AAAE,wBAAkBF,YAAY,CAACC,OAAb,CAAqB,OAArB;AAApB,KAAlB;AACH;;AACD,SAAOF,OAAP;AACH","sourcesContent":["import axios from 'axios';\nimport config from '../config/config';\n\n\nexport const userService = {\n    get,\n    post,\n    put,\n    deleteDetail\n};\n\nfunction get(apiEndpoint){\n    return axios.get(config.baseUrl+apiEndpoint, getOptions()).then((response)=>{\n        return response;\n    }).catch((err)=>{\n        console.log(\"Error in response\");\n        console.log(err);\n    })\n}\n\nfunction post(apiEndpoint, payload){\n    return axios.post(config.baseUrl+apiEndpoint, payload, getOptions()).then((response)=>{\n        return response;\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nfunction put(apiEndpoint, payload){\n    return axios.put(config.baseUrl+apiEndpoint, payload, getOptions()).then((response)=>{\n        return response;\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nfunction deleteDetail(apiEndpoint){\n    return axios.delete(config.baseUrl+apiEndpoint, getOptions()).then((response)=>{\n        return response;\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nfunction getOptions(){\n    let options = {}; \n    if(localStorage.getItem('token')){\n        options.headers = { 'x-access-token': localStorage.getItem('token') };\n    }\n    return options;\n}"]},"metadata":{},"sourceType":"module"}